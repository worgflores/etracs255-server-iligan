import com.rameses.annotations.*
import com.rameses.common.*;

class MunicipalityRPTLedgerInterceptor
{
	@Env
	def env

    @Service('RPTNotificationService')
    def svc 

    @ActiveDB('rptledger')
    def em_rptledger


	@After(pattern="RPTReceiptService.createReceipt", index=50000) 
    public void interceptLedgerPayment( evt ) {
        def receipt = evt.result 

        def payments = em_rptledger.getCreditsByReceipt(receipt)
        if (payments){
            checkEnv(payments)
            def asyncreq = svc.createAsyncRequest('ProvinceRPTLedgerService', 'postMunicipalPayment', payments, svc.buildEnvMap(env))
            def msg         = svc.createAsyncMessage(asyncreq[0])
            msg.filetype    = 'rptledger'
            msg.groupid     = 'async'
            msg.messagetype = 'rptledger-municipal-payment'
            msg.message     = 'Post municipality ledger payment. Receipt # ' + receipt.receiptno +'.'
            svc.sendAsyncMessage(msg)        
            println 'Municipal ledger payment successfully sent to province.'
        }
    }   

    void checkEnv(payments){
        if (!env.USERID){
            env.FULLNAME = 'EOR'
            env.USERID = 'EOR' 
            env.ORGID = payments[0].lguid 
            env.ORGCODE = payments[0].lguid 
            env.ORGCLASS = 'MUNICIPALITY'
        }
    }

}

