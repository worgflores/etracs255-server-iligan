import com.rameses.annotations.*;
import com.rameses.common.*;

class MunicipalitySyncService
{   
	@Service(value='CloudNotificationService', connection='notification_proxy')
	def cloudNotificationSvc;

	@XConnection('async_remote') 
	def asyncConn;

	@Env
	def env 

	@Service('OrgService')
	def orgSvc 

    @Context
    def appContext 

    @Service('RPTUtil')
    def util 

	@ProxyMethod
	public def syncData(params) {
		def org = orgSvc.open([objid:env.ORGID])
		def data = [
			orgid   : org.objid, 
			orgcode : org.code,
		]

		data.putAll(params);

		def args = [data] as Object[];
		def asyncreq = new AsyncRequest(params.remoteservicename, 'syncData', args, env); 
		asyncreq.contextName = 'etracs25';
		asyncreq.connection = 'async_remote'; 

		def msg = [
            origin   : env.ORGID.replaceAll('-.*?', ''),
            data     : asyncreq, 
            channel  : (appContext.conf.cloud_channel ? appContext.conf.cloud_channel : 'etracs'),
            channelgroup: util.getParentCode(),
		]

		cloudNotificationSvc.addMessage(msg)
		asyncConn.register(asyncreq.id)
		return new AsyncToken(asyncreq.id, asyncreq.connection)
	}
}