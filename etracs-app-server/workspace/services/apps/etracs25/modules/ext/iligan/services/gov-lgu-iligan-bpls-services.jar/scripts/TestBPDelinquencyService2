import com.rameses.annotations.*; 

class TestBPDelinquencyService2 {
	
	@DataContext('report_bpdelinquency') 
	def reportdb;

	@DataContext('report_bpdelinquency_item') 
	def reportitemdb;

	@Service('BusinessBillingService') 
	def billingSvc;

	private def numformatter = new java.text.DecimalFormat('0.00'); 

	@ProxyMethod
	public def buildByApp( params ) { 
		def result = [:]; 

		result.ledger = reportdb.findLedger( params ); 
		if ( result.ledger ) {
			def bill = getBilling( result.ledger ); 
			if ( bill ) {
				def ledger = result.ledger;
				def billdate = bill.billdate; 
				def expirydate = bill.expirydate; 
				ledger.interest = (bill.interest ? bill.interest : 0.0 ); 
				ledger.interest = new java.math.BigDecimal( numformatter.format( ledger.interest )); 

				ledger.surcharge = (bill.surcharge ? bill.surcharge : 0.0 ); 
				ledger.surcharge = new java.math.BigDecimal( numformatter.format( ledger.surcharge )); 
				
				ledger.balance = ledger.amount - ledger.amtpaid; 
				ledger.total = ledger.balance + ledger.surcharge + ledger.interest; 
			} 
		} 
		return result; 
	} 


	private def getBilling( o ) {
		try {
			def b = billingSvc.getBilling([ applicationid: o.applicationid ]); 
			def items = b.items.collect{[ interest: it.interest, surcharge: it.surcharge ]}  
			def interest = items.sum{( it.interest? it.interest: 0.0 )} 
			def surcharge = items.sum{( it.surcharge? it.surcharge: 0.0 )} 
			return [ 
				expirydate : b.expirydate, billdate : b.billdate,  
				interest : interest, surcharge : surcharge 
			]; 
		} catch(Throwable t) {
			return null; 
		}
	}
}